// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(cuid())
  email             String    @unique
  name              String?
  password          String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  role              Role      @default(USER)
  mercadoPagoVendorId String?
  transactions      Transaction[]
  chatSessions      ChatSession[]
}

model VendorCredentials {
  id                String    @id @default(cuid())
  vendorId          String    @unique
  accessToken       String
  publicKey         String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Transaction {
  id                String    @id @default(cuid())
  userId            String
  user              User      @relation(fields: [userId], references: [id])
  amount            Float
  status            TransactionStatus
  paymentMethod     String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  mercadoPagoId     String?
}

model ChatSession {
  id                String    @id @default(cuid())
  userId            String
  user              User      @relation(fields: [userId], references: [id])
  messages          Message[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Message {
  id                String    @id @default(cuid())
  chatSessionId     String
  chatSession       ChatSession @relation(fields: [chatSessionId], references: [id])
  content           String
  role              MessageRole
  createdAt         DateTime  @default(now())
}

enum Role {
  USER
  ADMIN
  VENDOR
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}

enum MessageRole {
  USER
  AI
}

